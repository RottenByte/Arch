#
#
# Everything here is for my own use, be careful if you don't know what you are doing.
#
# This is for a UEFI install only.
#
#

# Lists Disks
lsblk

# Wipe Disk Assuming /dev/nvme0n1 is the target disk
gdisk /dev/nvme0n1
x
z
y
y

# Create Partitions Assuming /dev/nvme0n1 is the target disk - 128M Efi System Partition - Remainder as ext4 - (No Swap Partition as using swap file)
cfdisk /dev/nvme0n1

# Create ESP filesystem (Assuming /dev/nvme0n1p1 is the target)
mkfs.vfat -F32 /dev/nvme0n1p1

# Format root filesystem as ext4 (Assuming /dev/nvme0n1p2 is the target)
mkfs.ext4 /dev/nvme0n1p2

# Mount Needed Partitions (Assuming /dev/nvme0n1 is the target disk)
mount /dev/nvme0n1p2 /mnt
mkdir -p /mnt/efi
mount -o noatime /dev/nvme0n1p1 /mnt/efi

# Install as usual
pacstrap /mnt base base-devel grub-efi-x86_64 efibootmgr linux linux-headers systemd-swap bash-completion dialog wpa_supplicant nano inetutils git usbutils nvme-cli screen

# Create fstab
genfstab -pU /mnt >> /mnt/etc/fstab

# Chroot
arch-chroot /mnt /bin/bash

# Grub install
grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB

# Generate grub.cfg
grub-mkconfig -o /boot/grub/grub.cfg

# Check efi entries
efibootmgr

# Set Locale to en_GB.UTF-8 + Time + Hwclock
nano /etc/locale.gen
# uncomment en_GB.UTF-8 + en_US.UTF-8
locale-gen
localectl set-locale LANG=en_GB.UTF-8
timedatectl list-timezones
timedatectl set-timezone Europe/London
hwclock --systohc

# Set Hostname (hostnamehere is the hostname)
echo hostnamehere > /etc/hostname

# Enable ILoveCandy + Colour support in pacman
nano /etc/pacman.conf
# uncomment "#Color"
# add "ILoveCandy" in the misc options part on a new line below "#VerbosePkgLists"

# Enable multilib for 32bit applications
nano /etc/pacman.conf
# uncomment "#[multilib]"
# uncomment "#Include = /etc/pacman.d/mirrorlist"
# This is what the part you have edited should look like
----------------------------------
[multilib]
Include = /etc/pacman.d/mirrorlist
----------------------------------

# Test multilib
pacman -Syu

# Setup Users (username is the user, change to the name that is required)
passwd
useradd -m -g users -G wheel,storage,power -s /bin/bash username
passwd username

# setup sudo for group "wheel" using the root password - must use "EDITOR=nano visudo" command
EDITOR=nano visudo
# Search for "#%wheel ALL=(ALL) ALL" and uncomment that line and add this line "Defaults rootpw" below so it looks like the following
----------------------------------
%wheel ALL=(ALL) ALL
Defaults rootpw
----------------------------------

# Edit Swapfile Config + set max size to 8gb - 16x512mb
nano /etc/systemd/swap.conf
"swapfc_enabled=1"
"swapfc_force_preallocated=1"
"swapfc_max_count=16"

# Enable Swapfile Service
systemctl enable systemd-swap

# Set Swappiness
nano /etc/sysctl.d/99-swappiness.conf

vm.swappiness=10

# SSD Only - Enable fstrim Service + run trim once
systemctl enable fstrim.timer
fstrim -v /

# Desktop Enviroment + Favourite Packages
pacman -S cinnamon lxdm-gtk3 xfce4-terminal networkmanager gufw gnome-keyring seahorse gedit htop ristretto tumbler

# Install Fonts
pacman -S ttf-dejavu ttf-opensans ttf-liberation noto-fonts noto-fonts-extra noto-fonts-emoji

# Edit LXDM Config for cinnamon
nano /etc/lxdm/lxdm.conf
"session=/usr/bin/cinnamon-session"

# Enable LXDM Service
systemctl enable lxdm

# Enable NetworkManager Service
systemctl enable NetworkManager

# Enable GUFW Firewall
systemctl enable ufw

# Exit chroot
exit

# Reboot + Remove Arch USB
reboot

# Install Intel Microcode Updates + install os-prober to find other operating systems + check efi entries
sudo pacman -S os-prober intel-ucode
sudo grub-mkconfig -o /boot/grub/grub.cfg
efibootmgr

# Install yay
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si

# Install Chromium
yay -S chromium pepper-flash chromium-widevine

# Disable Hibernation - create this file
sudo gedit /etc/polkit-1/rules.d/10-disable-hibernation.rules

polkit.addRule(function(action, subject) {
    if (action.id == "org.freedesktop.login1.hibernate" ||
        action.id == "org.freedesktop.login1.hibernate-multiple-sessions")
    {
        return polkit.Result.NO;
    }
});

# Rank Mirrors
yay -S reflector
sudo reflector --country "United Kingdom" --age 12 --protocol https --sort rate --save /etc/pacman.d/mirrorlist

# Install jdk8-openjdk + Set Default if needed (replace java-8-openjdk with your java version)
yay -S jdk8-openjdk
archlinux-java status
sudo archlinux-java set java-8-openjdk

# My Favourite Essential Packages
yay -S broadcom-wl grub-customizer menulibre numix-gtk-theme tkpacman dconf-editor xarchiver zip unzip unrar p7zip cpio gparted f2fs-tools exfat-utils ntfs-3g udftools gpart mtools gvfs-smb mate-calc openscad transmission-gtk vlc

# My Favourite Useful Packages
yay -S gnome-system-monitor kodi handbrake libdvdcss gst-libav gst-plugins-good mkvtoolnix-cli mkvtoolnix-gui gimp obs-studio telegram-desktop libreoffice-fresh

# Reboot
sudo reboot

# Verify Microcode Update
dmesg | grep microcode

#
#
# Install Complete
#
#

# Install gnome-screenshot and set default save directory (username is the user, change to the name that is required)
yay -S gnome-screenshot
mkdir -p /home/username/Pictures/Screenshots
gsettings set org.gnome.gnome-screenshot auto-save-directory file:///home/username/Pictures/Screenshots

# Install android packages
yay -S android-tools aosp-devel lineageos-devel maven gradle libmtp gvfs-mtp android-udev
# Add user to uucp group for mtp support (username is the user, change to the name that is required)
sudo gpasswd -a username uucp


#
#
# QEMU/KVM
#
#


# Install required packages
yay -S qemu virt-manager dnsmasq iptables ebtables dnsmasq dmidecode ovmf

# Add user to kvm group (username is the user, change to the name that is required)
sudo gpasswd -a username kvm

# Create this file with kvm_intel or kvm_amd depending on your system
/etc/modules-load.d/kvm.conf

kvm_intel

# load module with kvm_intel or kvm_amd depending on your system
modprobe kvm_intel

# Create polkit rule to allow users in kvm group to manage the libvirt
daemon without authentication
/etc/polkit-1/rules.d/50-libvirt.rules

/* Allow users in kvm group to manage the libvirt
daemon without authentication */
polkit.addRule(function(action, subject) {
    if (action.id == "org.libvirt.unix.manage" &&
        subject.isInGroup("kvm")) {
            return polkit.Result.YES;
    }
});

# Add user to the libvirt group (username is the user, change to the name that is required)
sudo groupadd libvirt
sudo gpasswd -a username libvirt

# Start and enable the libvirtd daemon
sudo systemctl start libvirtd
sudo systemctl enable libvirtd

# Check and start the default network interface
sudo virsh net-list --all
sudo virsh net-start default
sudo virsh net-autostart default


#
#
# Stuff
#
#


# Show CPU Freq
watch -n 0 grep \"cpu MHz\" /proc/cpuinfo

# Mount External Disk to /mnt/data in fstab - replace the UUID with your device
sudo mkdir /mnt/data
sudo gedit /etc/fstab
# Add this to the bottom on a new line but change the UUID to your device
UUID=7b626ac3-7146-4aa1-a361-ae9fca70198b        /mnt/data    ext4    rw,nofail,x-systemd.device-timeout=5    0  2

# Nuke GnuPG
sudo rm -fr /etc/pacman.d/gnupg
sudo pacman-key --init
sudo pacman-key --populate archlinux
sudo pacman-key --refresh-keys
sudo pacman -Syu

# qemu workaround for uefi support?
sudo rm /usr/share/qemu/firmware/*edk*
